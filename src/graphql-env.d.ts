/* eslint-disable */
/* prettier-ignore */

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: never;
  query: 'Query';
  mutation: 'Mutation';
  subscription: never;
  types: {
    'Activist': { kind: 'OBJECT'; name: 'Activist'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'thumbnail': { name: 'thumbnail'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; }; };
    'ActivistCreateInput': { kind: 'INPUT_OBJECT'; name: 'ActivistCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'thumbnail'; type: { kind: 'INPUT_OBJECT'; name: 'ImageRelateToOneForCreateInput'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ActivistOrderByInput': { kind: 'INPUT_OBJECT'; name: 'ActivistOrderByInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }]; };
    'ActivistUpdateArgs': { kind: 'INPUT_OBJECT'; name: 'ActivistUpdateArgs'; isOneOf: false; inputFields: [{ name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ActivistWhereUniqueInput'; ofType: null; }; }; defaultValue: null }, { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ActivistUpdateInput'; ofType: null; }; }; defaultValue: null }]; };
    'ActivistUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ActivistUpdateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'thumbnail'; type: { kind: 'INPUT_OBJECT'; name: 'ImageRelateToOneForUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ActivistWhereInput': { kind: 'INPUT_OBJECT'; name: 'ActivistWhereInput'; isOneOf: false; inputFields: [{ name: 'AND'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ActivistWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'OR'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ActivistWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'NOT'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ActivistWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IDFilter'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'thumbnail'; type: { kind: 'INPUT_OBJECT'; name: 'ImageWhereInput'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }]; };
    'ActivistWhereUniqueInput': { kind: 'INPUT_OBJECT'; name: 'ActivistWhereUniqueInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'AuthenticatedItem': { kind: 'UNION'; name: 'AuthenticatedItem'; fields: {}; possibleTypes: 'User'; };
    'Book': { kind: 'OBJECT'; name: 'Book'; fields: { 'author': { name: 'author'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'thumbnail': { name: 'thumbnail'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'BookCreateInput': { kind: 'INPUT_OBJECT'; name: 'BookCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'author'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'thumbnail'; type: { kind: 'INPUT_OBJECT'; name: 'ImageRelateToOneForCreateInput'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'BookOrderByInput': { kind: 'INPUT_OBJECT'; name: 'BookOrderByInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'author'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }]; };
    'BookUpdateArgs': { kind: 'INPUT_OBJECT'; name: 'BookUpdateArgs'; isOneOf: false; inputFields: [{ name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'BookWhereUniqueInput'; ofType: null; }; }; defaultValue: null }, { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'BookUpdateInput'; ofType: null; }; }; defaultValue: null }]; };
    'BookUpdateInput': { kind: 'INPUT_OBJECT'; name: 'BookUpdateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'author'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'thumbnail'; type: { kind: 'INPUT_OBJECT'; name: 'ImageRelateToOneForUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'BookWhereInput': { kind: 'INPUT_OBJECT'; name: 'BookWhereInput'; isOneOf: false; inputFields: [{ name: 'AND'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'BookWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'OR'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'BookWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'NOT'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'BookWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IDFilter'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'author'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'thumbnail'; type: { kind: 'INPUT_OBJECT'; name: 'ImageWhereInput'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }]; };
    'BookWhereUniqueInput': { kind: 'INPUT_OBJECT'; name: 'BookWhereUniqueInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'author'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'Boolean': unknown;
    'BooleanFilter': { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; isOneOf: false; inputFields: [{ name: 'equals'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }]; };
    'CalendarDay': unknown;
    'CalendarDayNullableFilter': { kind: 'INPUT_OBJECT'; name: 'CalendarDayNullableFilter'; isOneOf: false; inputFields: [{ name: 'equals'; type: { kind: 'SCALAR'; name: 'CalendarDay'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CalendarDay'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CalendarDay'; ofType: null; }; }; }; defaultValue: null }, { name: 'lt'; type: { kind: 'SCALAR'; name: 'CalendarDay'; ofType: null; }; defaultValue: null }, { name: 'lte'; type: { kind: 'SCALAR'; name: 'CalendarDay'; ofType: null; }; defaultValue: null }, { name: 'gt'; type: { kind: 'SCALAR'; name: 'CalendarDay'; ofType: null; }; defaultValue: null }, { name: 'gte'; type: { kind: 'SCALAR'; name: 'CalendarDay'; ofType: null; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'CalendarDayNullableFilter'; ofType: null; }; defaultValue: null }]; };
    'CloudinaryImageFormat': { kind: 'INPUT_OBJECT'; name: 'CloudinaryImageFormat'; isOneOf: false; inputFields: [{ name: 'prettyName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'width'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'height'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'crop'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'aspect_ratio'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'gravity'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'zoom'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'x'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'y'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'format'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fetch_format'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'quality'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'radius'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'angle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'effect'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'opacity'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'border'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'background'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'overlay'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'underlay'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'default_image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'delay'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'color'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'color_space'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'dpr'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'page'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'density'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'flags'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'transformation'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CloudinaryImage_File': { kind: 'OBJECT'; name: 'CloudinaryImage_File'; fields: { 'encoding': { name: 'encoding'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'filename': { name: 'filename'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'mimetype': { name: 'mimetype'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'originalFilename': { name: 'originalFilename'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'publicUrl': { name: 'publicUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'publicUrlTransformed': { name: 'publicUrlTransformed'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CreateInitialUserInput': { kind: 'INPUT_OBJECT'; name: 'CreateInitialUserInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'DateTime': unknown;
    'DateTimeNullableFilter': { kind: 'INPUT_OBJECT'; name: 'DateTimeNullableFilter'; isOneOf: false; inputFields: [{ name: 'equals'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; }; }; defaultValue: null }, { name: 'lt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'lte'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'gt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'gte'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'DateTimeNullableFilter'; ofType: null; }; defaultValue: null }]; };
    'Event': { kind: 'OBJECT'; name: 'Event'; fields: { 'content': { name: 'content'; type: { kind: 'OBJECT'; name: 'Event_content_Document'; ofType: null; } }; 'date': { name: 'date'; type: { kind: 'SCALAR'; name: 'CalendarDay'; ofType: null; } }; 'from': { name: 'from'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'headerImage': { name: 'headerImage'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'location': { name: 'location'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'pastEvent': { name: 'pastEvent'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'until': { name: 'until'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'EventCreateInput': { kind: 'INPUT_OBJECT'; name: 'EventCreateInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'headerImage'; type: { kind: 'INPUT_OBJECT'; name: 'ImageRelateToOneForCreateInput'; ofType: null; }; defaultValue: null }, { name: 'date'; type: { kind: 'SCALAR'; name: 'CalendarDay'; ofType: null; }; defaultValue: null }, { name: 'from'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'until'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'pastEvent'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'location'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'content'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'timestamp'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'EventOrderByInput': { kind: 'INPUT_OBJECT'; name: 'EventOrderByInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'date'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'from'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'until'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'pastEvent'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'location'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'timestamp'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }]; };
    'EventUpdateArgs': { kind: 'INPUT_OBJECT'; name: 'EventUpdateArgs'; isOneOf: false; inputFields: [{ name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EventWhereUniqueInput'; ofType: null; }; }; defaultValue: null }, { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EventUpdateInput'; ofType: null; }; }; defaultValue: null }]; };
    'EventUpdateInput': { kind: 'INPUT_OBJECT'; name: 'EventUpdateInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'headerImage'; type: { kind: 'INPUT_OBJECT'; name: 'ImageRelateToOneForUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'date'; type: { kind: 'SCALAR'; name: 'CalendarDay'; ofType: null; }; defaultValue: null }, { name: 'from'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'until'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'pastEvent'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'location'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'content'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'timestamp'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'EventWhereInput': { kind: 'INPUT_OBJECT'; name: 'EventWhereInput'; isOneOf: false; inputFields: [{ name: 'AND'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EventWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'OR'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EventWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'NOT'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EventWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IDFilter'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'headerImage'; type: { kind: 'INPUT_OBJECT'; name: 'ImageWhereInput'; ofType: null; }; defaultValue: null }, { name: 'date'; type: { kind: 'INPUT_OBJECT'; name: 'CalendarDayNullableFilter'; ofType: null; }; defaultValue: null }, { name: 'from'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'until'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'pastEvent'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'location'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'timestamp'; type: { kind: 'INPUT_OBJECT'; name: 'DateTimeNullableFilter'; ofType: null; }; defaultValue: null }]; };
    'EventWhereUniqueInput': { kind: 'INPUT_OBJECT'; name: 'EventWhereUniqueInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'Event_content_Document': { kind: 'OBJECT'; name: 'Event_content_Document'; fields: { 'document': { name: 'document'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; } }; }; };
    'ID': unknown;
    'IDFilter': { kind: 'INPUT_OBJECT'; name: 'IDFilter'; isOneOf: false; inputFields: [{ name: 'equals'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'lt'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'lte'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'gt'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'gte'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'IDFilter'; ofType: null; }; defaultValue: null }]; };
    'Image': { kind: 'OBJECT'; name: 'Image'; fields: { 'alt': { name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'category': { name: 'category'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'CloudinaryImage_File'; ofType: null; } }; }; };
    'ImageCreateInput': { kind: 'INPUT_OBJECT'; name: 'ImageCreateInput'; isOneOf: false; inputFields: [{ name: 'image'; type: { kind: 'SCALAR'; name: 'Upload'; ofType: null; }; defaultValue: null }, { name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'category'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ImageOrderByInput': { kind: 'INPUT_OBJECT'; name: 'ImageOrderByInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'alt'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'category'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }]; };
    'ImageRelateToOneForCreateInput': { kind: 'INPUT_OBJECT'; name: 'ImageRelateToOneForCreateInput'; isOneOf: false; inputFields: [{ name: 'create'; type: { kind: 'INPUT_OBJECT'; name: 'ImageCreateInput'; ofType: null; }; defaultValue: null }, { name: 'connect'; type: { kind: 'INPUT_OBJECT'; name: 'ImageWhereUniqueInput'; ofType: null; }; defaultValue: null }]; };
    'ImageRelateToOneForUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ImageRelateToOneForUpdateInput'; isOneOf: false; inputFields: [{ name: 'create'; type: { kind: 'INPUT_OBJECT'; name: 'ImageCreateInput'; ofType: null; }; defaultValue: null }, { name: 'connect'; type: { kind: 'INPUT_OBJECT'; name: 'ImageWhereUniqueInput'; ofType: null; }; defaultValue: null }, { name: 'disconnect'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'ImageUpdateArgs': { kind: 'INPUT_OBJECT'; name: 'ImageUpdateArgs'; isOneOf: false; inputFields: [{ name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ImageWhereUniqueInput'; ofType: null; }; }; defaultValue: null }, { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ImageUpdateInput'; ofType: null; }; }; defaultValue: null }]; };
    'ImageUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ImageUpdateInput'; isOneOf: false; inputFields: [{ name: 'image'; type: { kind: 'SCALAR'; name: 'Upload'; ofType: null; }; defaultValue: null }, { name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'category'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ImageWhereInput': { kind: 'INPUT_OBJECT'; name: 'ImageWhereInput'; isOneOf: false; inputFields: [{ name: 'AND'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ImageWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'OR'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ImageWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'NOT'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ImageWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IDFilter'; ofType: null; }; defaultValue: null }, { name: 'alt'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'category'; type: { kind: 'INPUT_OBJECT'; name: 'StringNullableFilter'; ofType: null; }; defaultValue: null }]; };
    'ImageWhereUniqueInput': { kind: 'INPUT_OBJECT'; name: 'ImageWhereUniqueInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'Int': unknown;
    'JSON': unknown;
    'KeystoneAdminMeta': { kind: 'OBJECT'; name: 'KeystoneAdminMeta'; fields: { 'list': { name: 'list'; type: { kind: 'OBJECT'; name: 'KeystoneAdminUIListMeta'; ofType: null; } }; 'lists': { name: 'lists'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'KeystoneAdminUIListMeta'; ofType: null; }; }; }; } }; }; };
    'KeystoneAdminUIFieldGroupMeta': { kind: 'OBJECT'; name: 'KeystoneAdminUIFieldGroupMeta'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fields': { name: 'fields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'KeystoneAdminUIFieldMeta'; ofType: null; }; }; }; } }; 'label': { name: 'label'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'KeystoneAdminUIFieldMeta': { kind: 'OBJECT'; name: 'KeystoneAdminUIFieldMeta'; fields: { 'createView': { name: 'createView'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'KeystoneAdminUIFieldMetaCreateView'; ofType: null; }; } }; 'customViewsIndex': { name: 'customViewsIndex'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fieldMeta': { name: 'fieldMeta'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'isFilterable': { name: 'isFilterable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isNonNull': { name: 'isNonNull'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'KeystoneAdminUIFieldMetaIsNonNull'; ofType: null; }; }; } }; 'isOrderable': { name: 'isOrderable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'itemView': { name: 'itemView'; type: { kind: 'OBJECT'; name: 'KeystoneAdminUIFieldMetaItemView'; ofType: null; } }; 'label': { name: 'label'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'listView': { name: 'listView'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'KeystoneAdminUIFieldMetaListView'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'search': { name: 'search'; type: { kind: 'ENUM'; name: 'QueryMode'; ofType: null; } }; 'viewsIndex': { name: 'viewsIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'KeystoneAdminUIFieldMetaCreateView': { kind: 'OBJECT'; name: 'KeystoneAdminUIFieldMetaCreateView'; fields: { 'fieldMode': { name: 'fieldMode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'KeystoneAdminUIFieldMetaCreateViewFieldMode'; ofType: null; }; } }; }; };
    'KeystoneAdminUIFieldMetaCreateViewFieldMode': { name: 'KeystoneAdminUIFieldMetaCreateViewFieldMode'; enumValues: 'edit' | 'hidden'; };
    'KeystoneAdminUIFieldMetaIsNonNull': { name: 'KeystoneAdminUIFieldMetaIsNonNull'; enumValues: 'read' | 'create' | 'update'; };
    'KeystoneAdminUIFieldMetaItemView': { kind: 'OBJECT'; name: 'KeystoneAdminUIFieldMetaItemView'; fields: { 'fieldMode': { name: 'fieldMode'; type: { kind: 'ENUM'; name: 'KeystoneAdminUIFieldMetaItemViewFieldMode'; ofType: null; } }; 'fieldPosition': { name: 'fieldPosition'; type: { kind: 'ENUM'; name: 'KeystoneAdminUIFieldMetaItemViewFieldPosition'; ofType: null; } }; }; };
    'KeystoneAdminUIFieldMetaItemViewFieldMode': { name: 'KeystoneAdminUIFieldMetaItemViewFieldMode'; enumValues: 'edit' | 'read' | 'hidden'; };
    'KeystoneAdminUIFieldMetaItemViewFieldPosition': { name: 'KeystoneAdminUIFieldMetaItemViewFieldPosition'; enumValues: 'form' | 'sidebar'; };
    'KeystoneAdminUIFieldMetaListView': { kind: 'OBJECT'; name: 'KeystoneAdminUIFieldMetaListView'; fields: { 'fieldMode': { name: 'fieldMode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'KeystoneAdminUIFieldMetaListViewFieldMode'; ofType: null; }; } }; }; };
    'KeystoneAdminUIFieldMetaListViewFieldMode': { name: 'KeystoneAdminUIFieldMetaListViewFieldMode'; enumValues: 'read' | 'hidden'; };
    'KeystoneAdminUIListMeta': { kind: 'OBJECT'; name: 'KeystoneAdminUIListMeta'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fields': { name: 'fields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'KeystoneAdminUIFieldMeta'; ofType: null; }; }; }; } }; 'groups': { name: 'groups'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'KeystoneAdminUIFieldGroupMeta'; ofType: null; }; }; }; } }; 'hideCreate': { name: 'hideCreate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hideDelete': { name: 'hideDelete'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'initialColumns': { name: 'initialColumns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'initialSort': { name: 'initialSort'; type: { kind: 'OBJECT'; name: 'KeystoneAdminUISort'; ofType: null; } }; 'isHidden': { name: 'isHidden'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isSingleton': { name: 'isSingleton'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'itemQueryName': { name: 'itemQueryName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'label': { name: 'label'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'labelField': { name: 'labelField'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'listQueryName': { name: 'listQueryName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'pageSize': { name: 'pageSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'plural': { name: 'plural'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'singular': { name: 'singular'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'KeystoneAdminUISort': { kind: 'OBJECT'; name: 'KeystoneAdminUISort'; fields: { 'direction': { name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'KeystoneAdminUISortDirection'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'KeystoneAdminUISortDirection': { name: 'KeystoneAdminUISortDirection'; enumValues: 'ASC' | 'DESC'; };
    'KeystoneMeta': { kind: 'OBJECT'; name: 'KeystoneMeta'; fields: { 'adminMeta': { name: 'adminMeta'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'KeystoneAdminMeta'; ofType: null; }; } }; }; };
    'Mutation': { kind: 'OBJECT'; name: 'Mutation'; fields: { 'authenticateUserWithPassword': { name: 'authenticateUserWithPassword'; type: { kind: 'UNION'; name: 'UserAuthenticationWithPasswordResult'; ofType: null; } }; 'createActivist': { name: 'createActivist'; type: { kind: 'OBJECT'; name: 'Activist'; ofType: null; } }; 'createActivists': { name: 'createActivists'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Activist'; ofType: null; }; } }; 'createBook': { name: 'createBook'; type: { kind: 'OBJECT'; name: 'Book'; ofType: null; } }; 'createBooks': { name: 'createBooks'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Book'; ofType: null; }; } }; 'createEvent': { name: 'createEvent'; type: { kind: 'OBJECT'; name: 'Event'; ofType: null; } }; 'createEvents': { name: 'createEvents'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Event'; ofType: null; }; } }; 'createImage': { name: 'createImage'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'createImages': { name: 'createImages'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'createInitialUser': { name: 'createInitialUser'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserAuthenticationWithPasswordSuccess'; ofType: null; }; } }; 'createPodcast': { name: 'createPodcast'; type: { kind: 'OBJECT'; name: 'Podcast'; ofType: null; } }; 'createPodcasts': { name: 'createPodcasts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Podcast'; ofType: null; }; } }; 'createPost': { name: 'createPost'; type: { kind: 'OBJECT'; name: 'Post'; ofType: null; } }; 'createPosts': { name: 'createPosts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Post'; ofType: null; }; } }; 'createTag': { name: 'createTag'; type: { kind: 'OBJECT'; name: 'Tag'; ofType: null; } }; 'createTags': { name: 'createTags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Tag'; ofType: null; }; } }; 'createUser': { name: 'createUser'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'createUsers': { name: 'createUsers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; 'createVideo': { name: 'createVideo'; type: { kind: 'OBJECT'; name: 'Video'; ofType: null; } }; 'createVideos': { name: 'createVideos'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Video'; ofType: null; }; } }; 'deleteActivist': { name: 'deleteActivist'; type: { kind: 'OBJECT'; name: 'Activist'; ofType: null; } }; 'deleteActivists': { name: 'deleteActivists'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Activist'; ofType: null; }; } }; 'deleteBook': { name: 'deleteBook'; type: { kind: 'OBJECT'; name: 'Book'; ofType: null; } }; 'deleteBooks': { name: 'deleteBooks'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Book'; ofType: null; }; } }; 'deleteEvent': { name: 'deleteEvent'; type: { kind: 'OBJECT'; name: 'Event'; ofType: null; } }; 'deleteEvents': { name: 'deleteEvents'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Event'; ofType: null; }; } }; 'deleteImage': { name: 'deleteImage'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'deleteImages': { name: 'deleteImages'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'deletePodcast': { name: 'deletePodcast'; type: { kind: 'OBJECT'; name: 'Podcast'; ofType: null; } }; 'deletePodcasts': { name: 'deletePodcasts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Podcast'; ofType: null; }; } }; 'deletePost': { name: 'deletePost'; type: { kind: 'OBJECT'; name: 'Post'; ofType: null; } }; 'deletePosts': { name: 'deletePosts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Post'; ofType: null; }; } }; 'deleteTag': { name: 'deleteTag'; type: { kind: 'OBJECT'; name: 'Tag'; ofType: null; } }; 'deleteTags': { name: 'deleteTags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Tag'; ofType: null; }; } }; 'deleteUser': { name: 'deleteUser'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'deleteUsers': { name: 'deleteUsers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; 'deleteVideo': { name: 'deleteVideo'; type: { kind: 'OBJECT'; name: 'Video'; ofType: null; } }; 'deleteVideos': { name: 'deleteVideos'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Video'; ofType: null; }; } }; 'endSession': { name: 'endSession'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updateActivist': { name: 'updateActivist'; type: { kind: 'OBJECT'; name: 'Activist'; ofType: null; } }; 'updateActivists': { name: 'updateActivists'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Activist'; ofType: null; }; } }; 'updateBook': { name: 'updateBook'; type: { kind: 'OBJECT'; name: 'Book'; ofType: null; } }; 'updateBooks': { name: 'updateBooks'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Book'; ofType: null; }; } }; 'updateEvent': { name: 'updateEvent'; type: { kind: 'OBJECT'; name: 'Event'; ofType: null; } }; 'updateEvents': { name: 'updateEvents'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Event'; ofType: null; }; } }; 'updateImage': { name: 'updateImage'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'updateImages': { name: 'updateImages'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'updatePodcast': { name: 'updatePodcast'; type: { kind: 'OBJECT'; name: 'Podcast'; ofType: null; } }; 'updatePodcasts': { name: 'updatePodcasts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Podcast'; ofType: null; }; } }; 'updatePost': { name: 'updatePost'; type: { kind: 'OBJECT'; name: 'Post'; ofType: null; } }; 'updatePosts': { name: 'updatePosts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Post'; ofType: null; }; } }; 'updateTag': { name: 'updateTag'; type: { kind: 'OBJECT'; name: 'Tag'; ofType: null; } }; 'updateTags': { name: 'updateTags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Tag'; ofType: null; }; } }; 'updateUser': { name: 'updateUser'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'updateUsers': { name: 'updateUsers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; 'updateVideo': { name: 'updateVideo'; type: { kind: 'OBJECT'; name: 'Video'; ofType: null; } }; 'updateVideos': { name: 'updateVideos'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Video'; ofType: null; }; } }; }; };
    'NestedStringFilter': { kind: 'INPUT_OBJECT'; name: 'NestedStringFilter'; isOneOf: false; inputFields: [{ name: 'equals'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'lt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lte'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'gt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'gte'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'contains'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'startsWith'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'endsWith'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'NestedStringFilter'; ofType: null; }; defaultValue: null }]; };
    'OrderDirection': { name: 'OrderDirection'; enumValues: 'asc' | 'desc'; };
    'PasswordState': { kind: 'OBJECT'; name: 'PasswordState'; fields: { 'isSet': { name: 'isSet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'Podcast': { kind: 'OBJECT'; name: 'Podcast'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'thumbnail': { name: 'thumbnail'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; }; };
    'PodcastCreateInput': { kind: 'INPUT_OBJECT'; name: 'PodcastCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'thumbnail'; type: { kind: 'INPUT_OBJECT'; name: 'ImageRelateToOneForCreateInput'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'PodcastOrderByInput': { kind: 'INPUT_OBJECT'; name: 'PodcastOrderByInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }]; };
    'PodcastUpdateArgs': { kind: 'INPUT_OBJECT'; name: 'PodcastUpdateArgs'; isOneOf: false; inputFields: [{ name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PodcastWhereUniqueInput'; ofType: null; }; }; defaultValue: null }, { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PodcastUpdateInput'; ofType: null; }; }; defaultValue: null }]; };
    'PodcastUpdateInput': { kind: 'INPUT_OBJECT'; name: 'PodcastUpdateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'thumbnail'; type: { kind: 'INPUT_OBJECT'; name: 'ImageRelateToOneForUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'PodcastWhereInput': { kind: 'INPUT_OBJECT'; name: 'PodcastWhereInput'; isOneOf: false; inputFields: [{ name: 'AND'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PodcastWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'OR'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PodcastWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'NOT'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PodcastWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IDFilter'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'thumbnail'; type: { kind: 'INPUT_OBJECT'; name: 'ImageWhereInput'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }]; };
    'PodcastWhereUniqueInput': { kind: 'INPUT_OBJECT'; name: 'PodcastWhereUniqueInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'Post': { kind: 'OBJECT'; name: 'Post'; fields: { 'author': { name: 'author'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'content': { name: 'content'; type: { kind: 'OBJECT'; name: 'Post_content_Document'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'tags': { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Tag'; ofType: null; }; }; } }; 'tagsCount': { name: 'tagsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PostCreateInput': { kind: 'INPUT_OBJECT'; name: 'PostCreateInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'content'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'author'; type: { kind: 'INPUT_OBJECT'; name: 'UserRelateToOneForCreateInput'; ofType: null; }; defaultValue: null }, { name: 'tags'; type: { kind: 'INPUT_OBJECT'; name: 'TagRelateToManyForCreateInput'; ofType: null; }; defaultValue: null }]; };
    'PostManyRelationFilter': { kind: 'INPUT_OBJECT'; name: 'PostManyRelationFilter'; isOneOf: false; inputFields: [{ name: 'every'; type: { kind: 'INPUT_OBJECT'; name: 'PostWhereInput'; ofType: null; }; defaultValue: null }, { name: 'some'; type: { kind: 'INPUT_OBJECT'; name: 'PostWhereInput'; ofType: null; }; defaultValue: null }, { name: 'none'; type: { kind: 'INPUT_OBJECT'; name: 'PostWhereInput'; ofType: null; }; defaultValue: null }]; };
    'PostOrderByInput': { kind: 'INPUT_OBJECT'; name: 'PostOrderByInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }]; };
    'PostRelateToManyForCreateInput': { kind: 'INPUT_OBJECT'; name: 'PostRelateToManyForCreateInput'; isOneOf: false; inputFields: [{ name: 'create'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PostCreateInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'connect'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PostWhereUniqueInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'PostRelateToManyForUpdateInput': { kind: 'INPUT_OBJECT'; name: 'PostRelateToManyForUpdateInput'; isOneOf: false; inputFields: [{ name: 'disconnect'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PostWhereUniqueInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'set'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PostWhereUniqueInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'create'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PostCreateInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'connect'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PostWhereUniqueInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'PostUpdateArgs': { kind: 'INPUT_OBJECT'; name: 'PostUpdateArgs'; isOneOf: false; inputFields: [{ name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PostWhereUniqueInput'; ofType: null; }; }; defaultValue: null }, { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PostUpdateInput'; ofType: null; }; }; defaultValue: null }]; };
    'PostUpdateInput': { kind: 'INPUT_OBJECT'; name: 'PostUpdateInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'content'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'author'; type: { kind: 'INPUT_OBJECT'; name: 'UserRelateToOneForUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'tags'; type: { kind: 'INPUT_OBJECT'; name: 'TagRelateToManyForUpdateInput'; ofType: null; }; defaultValue: null }]; };
    'PostWhereInput': { kind: 'INPUT_OBJECT'; name: 'PostWhereInput'; isOneOf: false; inputFields: [{ name: 'AND'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PostWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'OR'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PostWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'NOT'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PostWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IDFilter'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'author'; type: { kind: 'INPUT_OBJECT'; name: 'UserWhereInput'; ofType: null; }; defaultValue: null }, { name: 'tags'; type: { kind: 'INPUT_OBJECT'; name: 'TagManyRelationFilter'; ofType: null; }; defaultValue: null }]; };
    'PostWhereUniqueInput': { kind: 'INPUT_OBJECT'; name: 'PostWhereUniqueInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'Post_content_Document': { kind: 'OBJECT'; name: 'Post_content_Document'; fields: { 'document': { name: 'document'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; } }; }; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'activist': { name: 'activist'; type: { kind: 'OBJECT'; name: 'Activist'; ofType: null; } }; 'activists': { name: 'activists'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Activist'; ofType: null; }; }; } }; 'activistsCount': { name: 'activistsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'authenticatedItem': { name: 'authenticatedItem'; type: { kind: 'UNION'; name: 'AuthenticatedItem'; ofType: null; } }; 'book': { name: 'book'; type: { kind: 'OBJECT'; name: 'Book'; ofType: null; } }; 'books': { name: 'books'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Book'; ofType: null; }; }; } }; 'booksCount': { name: 'booksCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'event': { name: 'event'; type: { kind: 'OBJECT'; name: 'Event'; ofType: null; } }; 'events': { name: 'events'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Event'; ofType: null; }; }; } }; 'eventsCount': { name: 'eventsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'image': { name: 'image'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'images': { name: 'images'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; }; } }; 'imagesCount': { name: 'imagesCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'keystone': { name: 'keystone'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'KeystoneMeta'; ofType: null; }; } }; 'podcast': { name: 'podcast'; type: { kind: 'OBJECT'; name: 'Podcast'; ofType: null; } }; 'podcasts': { name: 'podcasts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Podcast'; ofType: null; }; }; } }; 'podcastsCount': { name: 'podcastsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'post': { name: 'post'; type: { kind: 'OBJECT'; name: 'Post'; ofType: null; } }; 'posts': { name: 'posts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Post'; ofType: null; }; }; } }; 'postsCount': { name: 'postsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'tag': { name: 'tag'; type: { kind: 'OBJECT'; name: 'Tag'; ofType: null; } }; 'tags': { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Tag'; ofType: null; }; }; } }; 'tagsCount': { name: 'tagsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'users': { name: 'users'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; }; } }; 'usersCount': { name: 'usersCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'video': { name: 'video'; type: { kind: 'OBJECT'; name: 'Video'; ofType: null; } }; 'videos': { name: 'videos'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Video'; ofType: null; }; }; } }; 'videosCount': { name: 'videosCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'QueryMode': { name: 'QueryMode'; enumValues: 'default' | 'insensitive'; };
    'String': unknown;
    'StringFilter': { kind: 'INPUT_OBJECT'; name: 'StringFilter'; isOneOf: false; inputFields: [{ name: 'equals'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'lt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lte'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'gt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'gte'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'contains'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'startsWith'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'endsWith'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'mode'; type: { kind: 'ENUM'; name: 'QueryMode'; ofType: null; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'NestedStringFilter'; ofType: null; }; defaultValue: null }]; };
    'StringNullableFilter': { kind: 'INPUT_OBJECT'; name: 'StringNullableFilter'; isOneOf: false; inputFields: [{ name: 'equals'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'lt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lte'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'gt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'gte'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'contains'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'startsWith'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'endsWith'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'mode'; type: { kind: 'ENUM'; name: 'QueryMode'; ofType: null; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'StringNullableFilter'; ofType: null; }; defaultValue: null }]; };
    'Tag': { kind: 'OBJECT'; name: 'Tag'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'posts': { name: 'posts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Post'; ofType: null; }; }; } }; 'postsCount': { name: 'postsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'TagCreateInput': { kind: 'INPUT_OBJECT'; name: 'TagCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'posts'; type: { kind: 'INPUT_OBJECT'; name: 'PostRelateToManyForCreateInput'; ofType: null; }; defaultValue: null }]; };
    'TagManyRelationFilter': { kind: 'INPUT_OBJECT'; name: 'TagManyRelationFilter'; isOneOf: false; inputFields: [{ name: 'every'; type: { kind: 'INPUT_OBJECT'; name: 'TagWhereInput'; ofType: null; }; defaultValue: null }, { name: 'some'; type: { kind: 'INPUT_OBJECT'; name: 'TagWhereInput'; ofType: null; }; defaultValue: null }, { name: 'none'; type: { kind: 'INPUT_OBJECT'; name: 'TagWhereInput'; ofType: null; }; defaultValue: null }]; };
    'TagOrderByInput': { kind: 'INPUT_OBJECT'; name: 'TagOrderByInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }]; };
    'TagRelateToManyForCreateInput': { kind: 'INPUT_OBJECT'; name: 'TagRelateToManyForCreateInput'; isOneOf: false; inputFields: [{ name: 'create'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'TagCreateInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'connect'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'TagWhereUniqueInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'TagRelateToManyForUpdateInput': { kind: 'INPUT_OBJECT'; name: 'TagRelateToManyForUpdateInput'; isOneOf: false; inputFields: [{ name: 'disconnect'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'TagWhereUniqueInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'set'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'TagWhereUniqueInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'create'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'TagCreateInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'connect'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'TagWhereUniqueInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'TagUpdateArgs': { kind: 'INPUT_OBJECT'; name: 'TagUpdateArgs'; isOneOf: false; inputFields: [{ name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'TagWhereUniqueInput'; ofType: null; }; }; defaultValue: null }, { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'TagUpdateInput'; ofType: null; }; }; defaultValue: null }]; };
    'TagUpdateInput': { kind: 'INPUT_OBJECT'; name: 'TagUpdateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'posts'; type: { kind: 'INPUT_OBJECT'; name: 'PostRelateToManyForUpdateInput'; ofType: null; }; defaultValue: null }]; };
    'TagWhereInput': { kind: 'INPUT_OBJECT'; name: 'TagWhereInput'; isOneOf: false; inputFields: [{ name: 'AND'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'TagWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'OR'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'TagWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'NOT'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'TagWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IDFilter'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'posts'; type: { kind: 'INPUT_OBJECT'; name: 'PostManyRelationFilter'; ofType: null; }; defaultValue: null }]; };
    'TagWhereUniqueInput': { kind: 'INPUT_OBJECT'; name: 'TagWhereUniqueInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'Upload': unknown;
    'User': { kind: 'OBJECT'; name: 'User'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'password': { name: 'password'; type: { kind: 'OBJECT'; name: 'PasswordState'; ofType: null; } }; 'posts': { name: 'posts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Post'; ofType: null; }; }; } }; 'postsCount': { name: 'postsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'UserAuthenticationWithPasswordFailure': { kind: 'OBJECT'; name: 'UserAuthenticationWithPasswordFailure'; fields: { 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'UserAuthenticationWithPasswordResult': { kind: 'UNION'; name: 'UserAuthenticationWithPasswordResult'; fields: {}; possibleTypes: 'UserAuthenticationWithPasswordFailure' | 'UserAuthenticationWithPasswordSuccess'; };
    'UserAuthenticationWithPasswordSuccess': { kind: 'OBJECT'; name: 'UserAuthenticationWithPasswordSuccess'; fields: { 'item': { name: 'item'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; 'sessionToken': { name: 'sessionToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'UserCreateInput': { kind: 'INPUT_OBJECT'; name: 'UserCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'posts'; type: { kind: 'INPUT_OBJECT'; name: 'PostRelateToManyForCreateInput'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'UserOrderByInput': { kind: 'INPUT_OBJECT'; name: 'UserOrderByInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }]; };
    'UserRelateToOneForCreateInput': { kind: 'INPUT_OBJECT'; name: 'UserRelateToOneForCreateInput'; isOneOf: false; inputFields: [{ name: 'create'; type: { kind: 'INPUT_OBJECT'; name: 'UserCreateInput'; ofType: null; }; defaultValue: null }, { name: 'connect'; type: { kind: 'INPUT_OBJECT'; name: 'UserWhereUniqueInput'; ofType: null; }; defaultValue: null }]; };
    'UserRelateToOneForUpdateInput': { kind: 'INPUT_OBJECT'; name: 'UserRelateToOneForUpdateInput'; isOneOf: false; inputFields: [{ name: 'create'; type: { kind: 'INPUT_OBJECT'; name: 'UserCreateInput'; ofType: null; }; defaultValue: null }, { name: 'connect'; type: { kind: 'INPUT_OBJECT'; name: 'UserWhereUniqueInput'; ofType: null; }; defaultValue: null }, { name: 'disconnect'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'UserUpdateArgs': { kind: 'INPUT_OBJECT'; name: 'UserUpdateArgs'; isOneOf: false; inputFields: [{ name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UserWhereUniqueInput'; ofType: null; }; }; defaultValue: null }, { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UserUpdateInput'; ofType: null; }; }; defaultValue: null }]; };
    'UserUpdateInput': { kind: 'INPUT_OBJECT'; name: 'UserUpdateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'posts'; type: { kind: 'INPUT_OBJECT'; name: 'PostRelateToManyForUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'UserWhereInput': { kind: 'INPUT_OBJECT'; name: 'UserWhereInput'; isOneOf: false; inputFields: [{ name: 'AND'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UserWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'OR'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UserWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'NOT'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UserWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IDFilter'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'posts'; type: { kind: 'INPUT_OBJECT'; name: 'PostManyRelationFilter'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'INPUT_OBJECT'; name: 'DateTimeNullableFilter'; ofType: null; }; defaultValue: null }]; };
    'UserWhereUniqueInput': { kind: 'INPUT_OBJECT'; name: 'UserWhereUniqueInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'Video': { kind: 'OBJECT'; name: 'Video'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'thumbnail': { name: 'thumbnail'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VideoCreateInput': { kind: 'INPUT_OBJECT'; name: 'VideoCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'thumbnail'; type: { kind: 'INPUT_OBJECT'; name: 'ImageRelateToOneForCreateInput'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'VideoOrderByInput': { kind: 'INPUT_OBJECT'; name: 'VideoOrderByInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; defaultValue: null }]; };
    'VideoUpdateArgs': { kind: 'INPUT_OBJECT'; name: 'VideoUpdateArgs'; isOneOf: false; inputFields: [{ name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'VideoWhereUniqueInput'; ofType: null; }; }; defaultValue: null }, { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'VideoUpdateInput'; ofType: null; }; }; defaultValue: null }]; };
    'VideoUpdateInput': { kind: 'INPUT_OBJECT'; name: 'VideoUpdateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'thumbnail'; type: { kind: 'INPUT_OBJECT'; name: 'ImageRelateToOneForUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'VideoWhereInput': { kind: 'INPUT_OBJECT'; name: 'VideoWhereInput'; isOneOf: false; inputFields: [{ name: 'AND'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'VideoWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'OR'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'VideoWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'NOT'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'VideoWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IDFilter'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'thumbnail'; type: { kind: 'INPUT_OBJECT'; name: 'ImageWhereInput'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }]; };
    'VideoWhereUniqueInput': { kind: 'INPUT_OBJECT'; name: 'VideoWhereUniqueInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
  };
};

import * as gqlTada from 'gql.tada';

declare module 'gql.tada' {
  interface setupSchema {
    introspection: introspection
  }
}